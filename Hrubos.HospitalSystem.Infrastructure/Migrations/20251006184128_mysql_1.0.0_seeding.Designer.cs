// <auto-generated />
using System;
using Hrubos.HospitalSystem.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hrubos.HospitalSystem.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalSystemDbContext))]
    [Migration("20251006184128_mysql_1.0.0_seeding")]
    partial class mysql_100_seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirthNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jan.novak@nemocnice.cz",
                            FirstName = "Jan",
                            LastName = "Novák",
                            PhoneNumber = "111222333",
                            SpecializationId = 1,
                            UserName = "doktor1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "petr.svoboda@nemocnice.cz",
                            FirstName = "Petr",
                            LastName = "Svoboda",
                            PhoneNumber = "222333444",
                            SpecializationId = 2,
                            UserName = "doktor2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lucie.dvorakova@nemocnice.cz",
                            FirstName = "Lucie",
                            LastName = "Dvořáková",
                            PhoneNumber = "333444555",
                            SpecializationId = 3,
                            UserName = "doktor3"
                        },
                        new
                        {
                            Id = 4,
                            Email = "arnost.patek@nemocnice.cz",
                            FirstName = "Arnošt",
                            LastName = "Pátek",
                            PhoneNumber = "444555666",
                            SpecializationId = 2,
                            UserName = "doktor4"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.DoctorPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("DoctorPatient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            PatientId = 2
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            PatientId = 3
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 1,
                            PatientId = 3
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 4,
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("ExaminationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("ExaminationTypeId");

                    b.HasIndex("PatientId");

                    b.ToTable("Examination");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2025, 9, 26, 20, 41, 27, 926, DateTimeKind.Local).AddTicks(2603),
                            DoctorId = 1,
                            ExaminationTypeId = 1,
                            Notes = "Kontrola tlaku",
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2025, 10, 1, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(4744),
                            DoctorId = 2,
                            ExaminationTypeId = 3,
                            Notes = "Krevní test",
                            PatientId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2025, 10, 4, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(4759),
                            DoctorId = 3,
                            ExaminationTypeId = 2,
                            Notes = "Vyšetření kloubů",
                            PatientId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2025, 9, 28, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(4762),
                            DoctorId = 3,
                            ExaminationTypeId = 2,
                            Notes = "Vyšetření ruky",
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.ExaminationResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ExaminationId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationId")
                        .IsUnique();

                    b.ToTable("ExaminationResult");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "vše v pořádku",
                            ExaminationId = 1,
                            Values = "TK: 120/80, Puls: 72"
                        },
                        new
                        {
                            Id = 2,
                            Description = "lehká anémie",
                            ExaminationId = 2,
                            Values = "Hemoglobin: 110 g/l, Hct: 33%"
                        },
                        new
                        {
                            Id = 3,
                            Attachment = "cloub_knee_xray.jpg",
                            Description = "artritida kolene",
                            ExaminationId = 3,
                            Values = "RTG: mírná artritida, rentgenový snímek v příloze"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.ExaminationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("ExaminationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Obvodní vyšetření"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Specialistické vyšetření"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Laboratorní test"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirthNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthNumber = "900101/1234",
                            Email = "tomas.horak@email.cz",
                            FirstName = "Tomáš",
                            LastName = "Horák",
                            PhoneNumber = "601111111",
                            UserName = "pacient1"
                        },
                        new
                        {
                            Id = 2,
                            BirthNumber = "950202/2345",
                            Email = "anna.mala@email.cz",
                            FirstName = "Anna",
                            LastName = "Malá",
                            PhoneNumber = "602222222",
                            UserName = "pacient2"
                        },
                        new
                        {
                            Id = 3,
                            BirthNumber = "880303/3456",
                            Email = "karel.novotny@email.cz",
                            FirstName = "Karel",
                            LastName = "Novotný",
                            PhoneNumber = "603333333",
                            UserName = "pacient3"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Oftalmologie"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chirurgie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pediatrie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kardiologie"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pneumologie"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NextDose")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccineTypeId");

                    b.ToTable("Vaccination");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 10, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9306),
                            NextDose = new DateTime(2026, 4, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9452),
                            PatientId = 1,
                            VaccineTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2025, 2, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9791),
                            NextDose = new DateTime(2026, 2, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9794),
                            PatientId = 2,
                            VaccineTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2025, 4, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9797),
                            NextDose = new DateTime(2026, 4, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9798),
                            PatientId = 3,
                            VaccineTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2025, 7, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9799),
                            NextDose = new DateTime(2026, 10, 6, 20, 41, 27, 927, DateTimeKind.Local).AddTicks(9800),
                            PatientId = 1,
                            VaccineTypeId = 2
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.VaccineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("VaccineType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chřipka"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hepatitida B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tetanus"
                        });
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Specialization", "Specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.DoctorPatient", b =>
                {
                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorPatients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("DoctorPatients")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Examination", b =>
                {
                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Examinations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.ExaminationType", "ExaminationType")
                        .WithMany("Examinations")
                        .HasForeignKey("ExaminationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("Examinations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("ExaminationType");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.ExaminationResult", b =>
                {
                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Examination", "Examination")
                        .WithOne("Result")
                        .HasForeignKey("Hrubos.HospitalSystem.Domain.Entities.ExaminationResult", "ExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Vaccination", b =>
                {
                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("Vaccinations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrubos.HospitalSystem.Domain.Entities.VaccineType", "VaccineType")
                        .WithMany("Vaccinations")
                        .HasForeignKey("VaccineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("VaccineType");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("DoctorPatients");

                    b.Navigation("Examinations");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Examination", b =>
                {
                    b.Navigation("Result");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.ExaminationType", b =>
                {
                    b.Navigation("Examinations");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Patient", b =>
                {
                    b.Navigation("DoctorPatients");

                    b.Navigation("Examinations");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.Specialization", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("Hrubos.HospitalSystem.Domain.Entities.VaccineType", b =>
                {
                    b.Navigation("Vaccinations");
                });
#pragma warning restore 612, 618
        }
    }
}
